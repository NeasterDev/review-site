{"version":3,"sources":["utils/auth.js","components/Autocomplete/index.js","components/NavTabs/index.js","components/Footer/index.js","components/Review/index.js","components/Hero/index.js","utils/query.js","components/pages/Home/index.js","utils/mutations.js","components/pages/Login/index.js","components/pages/Signup/index.js","components/pages/Profile/index.js","components/Write/index.js","components/ReviewContainer/index.js","App.js","reportWebVitals.js","index.js","img/hero-img.jpg"],"names":["auth","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","AutoComplete","_ref","change","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","dist_src","options","className","placeholder","value","onChange","e","target","NavTabs","href","role","aria-label","aria-expanded","onClick","document","querySelector","classList","toggle","aria-hidden","onSubmit","console","log","Autocomplete","type","Auth","loggedIn","Fragment","event","preventDefault","logout","loginEl","signUpEl","contains","Footer","class","rel","Review","rating","reviewText","username","stars","i","data-location","Hero","src","image","QUERY_GET_ME","gql","_templateObject","taggedTemplateLiteral","GET_REVIEWS","_templateObject2","_templateObject3","_templateObject4","_templateObject5","Home","userData","_useQuery","useQuery","loading","error","data","concat","message","Hero_Hero","users","map","user","savedReviews","length","review","Review_Review","key","_id","LOGIN_USER","mutations_templateObject","ADD_USER","mutations_templateObject2","ADD_REVIEW","mutations_templateObject3","mutations_templateObject4","mutations_templateObject5","Login","_templateObject6","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleChange","_event$target","name","objectSpread","defineProperty","handleFormSubmit","asyncToGenerator","regenerator_default","mark","_callee","_yield$login","wrap","_context","prev","next","variables","sent","t0","stop","_x","apply","arguments","id","Signup","addUser","_yield$addUser","Profile","me","Write","addReview","_useMutation2$","setReviewText","_useState3","_useState4","setRating","_useState5","_useState6","setLocation","parseInt","list","ReviewContainer","react_router_dom","components_NavTabs","react_router","exact","path","component","pages_Login","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","components_ReviewContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.6896aa9c.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Check if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); \n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieve the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Save user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\n\nconst AutoComplete = ({ change }) => {\n  const [text, setText] = useState(\"\");\n  const nationalParks = [\n    \"Acadia National Park\",\n    \"Arches National Park\",\n    \"Badlands National Park\",\n    \"Big Bend National Park\",\n    \"Biscayne National Park\",\n    \"Black Canyon of the Gunnison National Park\",\n    \"Bryce Canyon National Park\",\n    \"Canyonlands National Park\",\n    \"Capitol Reef National Park\",\n    \"Carlsbad Caverns National Park\",\n    \"Channel Islands National Park\",\n    \"Congaree National Park\",\n    \"Crater Lake National Park\",\n    \"Cuyahoga Valley National Park\",\n    \"Death Valley National Park\",\n    \"Denali National Park and Preserve\",\n    \"Dry Tortugas National Park\",\n    \"Everglades National Park\",\n    \"Gates of the Arctic National Park\",\n    \"Gateway Arch National Park\",\n    \"Glacier National Park\",\n    \"Glacier Bay National Park\",\n    \"Grand Canyon National Park\",\n    \"Grand Teton National Park\",\n    \"Great Basin National Park\",\n    \"Great Sand Dunes National Park and Preserve\",\n    \"Great Smoky Mountains National Park\",\n    \"Guadalupe Mountains National Park\",\n    \"Haleakala National Park\",\n    \"Hawaii Volcanoes National Park\",\n    \"Hot Springs National Park\",\n    \"Indiana Dunes National Park\",\n    \"Isle Royale National Park\",\n    \"Joshua Tree National Park\",\n    \"Katmai National Park and Preserve\",\n    \"Kenai Fjords National Park\",\n    \"Kings Canyon National Park\",\n    \"Kobuk Valley National Park\",\n    \"Lake Clark National Park\",\n    \"Lassen Volcanic National Park\",\n    \"Mammoth Cave National Park\",\n    \"Mesa Verde National Park\",\n    \"Mount Rainier National Park\",\n    \"National Park of American Samoa\",\n    \"New River Gorge National Park\",\n    \"North Cascades National Park\",\n    \"Olympic National Park\",\n    \"Petrified Forest National Park\",\n    \"Pinnacles National Park\",\n    \"Redwood National Park\",\n    \"Rocky Mountain National Park\",\n    \"Saguaro National Park\",\n    \"Sequoia National Park\",\n    \"Shenandoah National Park\",\n    \"Theodore Roosevelt National Park\",\n    \"Virgin Islands National Park\",\n    \"Voyageurs National Park\",\n    \"White Sands National Park\",\n    \"Wind Cave National Park\",\n    \"Wrangell-St. Elias National Park and Preserve\",\n    \"Yellowstone National Park\",\n    \"Yosemite National Park\",\n    \"Zion National Park\",\n  ];\n  return (\n      <Hint options={nationalParks}>\n        <input className=\"input searchInput\" placeholder=\"i.e. Yellowstone...\" value={text} \n        onChange={(e) => {setText(e.target.value); \n          if (change) {\n            change(e)}\n          }\n        } />\n      </Hint>\n  );\n};\nexport default AutoComplete;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nimport Auth from \"../../utils/auth\";\n\nimport AutoComplete from \"../Autocomplete\";\nconst nationalParks = [\n  \"Acadia National Park\",\n  \"Arches National Park\",\n  \"Badlands National Park\",\n  \"Big Bend National Park\",\n  \"Biscayne National Park\",\n  \"Black Canyon of the Gunnison National Park\",\n  \"Bryce Canyon National Park\",\n  \"Canyonlands National Park\",\n  \"Capitol Reef National Park\",\n  \"Carlsbad Caverns National Park\",\n  \"Channel Islands National Park\",\n  \"Congaree National Park\",\n  \"Crater Lake National Park\",\n  \"Cuyahoga Valley National Park\",\n  \"Death Valley National Park\",\n  \"Denali National Park and Preserve\",\n  \"Dry Tortugas National Park\",\n  \"Everglades National Park\",\n  \"Gates of the Arctic National Park\",\n  \"Gateway Arch National Park\",\n  \"Glacier National Park\",\n  \"Glacier Bay National Park\",\n  \"Grand Canyon National Park\",\n  \"Grand Teton National Park\",\n  \"Great Basin National Park\",\n  \"Great Sand Dunes National Park and Preserve\",\n  \"Great Smoky Mountains National Park\",\n  \"Guadalupe Mountains National Park\",\n  \"Haleakala National Park\",\n  \"Hawaii Volcanoes National Park\",\n  \"Hot Springs National Park\",\n  \"Indiana Dunes National Park\",\n  \"Isle Royale National Park\",\n  \"Joshua Tree National Park\",\n  \"Katmai National Park and Preserve\",\n  \"Kenai Fjords National Park\",\n  \"Kings Canyon National Park\",\n  \"Kobuk Valley National Park\",\n  \"Lake Clark National Park\",\n  \"Lassen Volcanic National Park\",\n  \"Mammoth Cave National Park\",\n  \"Mesa Verde National Park\",\n  \"Mount Rainier National Park\",\n  \"National Park of American Samoa\",\n  \"New River Gorge National Park\",\n  \"North Cascades National Park\",\n  \"Olympic National Park\",\n  \"Petrified Forest National Park\",\n  \"Pinnacles National Park\",\n  \"Redwood National Park\",\n  \"Rocky Mountain National Park\",\n  \"Saguaro National Park\",\n  \"Sequoia National Park\",\n  \"Shenandoah National Park\",\n  \"Theodore Roosevelt National Park\",\n  \"Virgin Islands National Park\",\n  \"Voyageurs National Park\",\n  \"White Sands National Park\",\n  \"Wind Cave National Park\",\n  \"Wrangell-St. Elias National Park and Preserve\",\n  \"Yellowstone National Park\",\n  \"Yosemite National Park\",\n  \"Zion National Park\",\n];\n\nfunction NavTabs() {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  const handleBurgerClick = (e) => {\n    const burger = document.querySelector(\".navbar-menu\");\n    burger.classList.toggle(\"is-active\");\n  };\n\n  const handleAddReview = (e) => {\n    const addReviewEl = document.querySelector('.write-container');\n    addReviewEl.classList.toggle('is-hidden');\n  }\n\n  const handleSignUp = (e) => {\n    const signUpEl = document.querySelector('.sign-up-container');\n    const loginEl = document.querySelector('.login-container');\n    if (!loginEl.classList.contains('is-hidden')) {\n      loginEl.classList.toggle('is-hidden');\n    }\n    signUpEl.classList.toggle('is-hidden');\n  }\n\n  const handleLogin = (e) => {\n    const loginEl = document.querySelector('.login-container');\n    const signUpEl = document.querySelector('.sign-up-container');\n    if (!signUpEl.classList.contains('is-hidden')) {\n      signUpEl.classList.toggle('is-hidden');\n    }\n    loginEl.classList.toggle('is-hidden');\n  }\n\n\n  return (\n    <section className=\"section\">\n      <nav className=\"navbar main-bg-color is-fixed-top mb-10 o-5\">\n        <div className=\"navbar-brand\">\n          <a href=\"/\" className=\"navbar-item\">\n            <div className=\"is-flex \">\n              <h1 className=\"is-size-3 has-text-weight-bold\">Nelp</h1>\n            </div>\n          </a>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger my-auto\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            onClick={handleBurgerClick}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n          <div className=\"navbar-item\">\n            <form onSubmit={console.log('submit clicked')}>\n              <div className=\" is-flex-desktop is-flex-tablet\">\n                <AutoComplete  />\n                <button className=\"button is-hidden-mobile\" type=\"submit\">\n                  Search\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            {Auth.loggedIn() ? (\n              <>\n                <a className=\"navbar-item\" href=\"#add-review\" onClick={\n                  handleAddReview\n                }>\n                  Add Review\n                </a>\n                <a className=\"navbar-item\" href=\"/profile\">\n                  Profile\n                </a>\n                <a className=\"navbar-item\" href=\"/\" onClick={logout}>\n                  Logout\n                </a>\n              </>\n            ) : (\n              <>\n                <a className=\"navbar-item\" href=\"#login\" onClick={\n                  handleLogin\n                }>\n                  Login\n                </a>\n                <a className=\"navbar-item\" href=\"#signup\" onClick={\n                  handleSignUp\n                }>\n                  Signup\n                </a>\n              </>\n            )}\n          </div>\n        </div>\n      </nav>\n    </section>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Footer() {\n  return (\n    <footer class=\"footer main-bg-color o-5 is-flex is-justify-content-center\">\n\n      <div className=\"ml-2 has-text-weight-bold is-flex-desktop\">\n        <div className=\" is-italic has-text-centered has-text-weight-light\">Created by,&nbsp;&nbsp;</div>\n        <p>\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/crazypants300\">Nicholas Easter,&nbsp;</a>\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/CoderJ01\">Joshua Jones,&nbsp;</a>and&nbsp;\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Evidal19\">Elisa Vidal</a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\n\n\nexport const Review = ({location, rating, reviewText, username}) => {\n  // const lorem =\n  //   \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer auctor at sem sed facilisis. Vivamus congue arcu dolor, in ornare enim pulvinar a. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Suspendisse fermentum lectus eget hendrerit sodales. Aliquam bibendum tortor sem, id placerat nunc fermentum.\";\n\n  let stars = \"\";\n  for (let i = 0; i < rating; i++) {\n    stars += \"★\";\n  }\n\n  return (\n    <div className=\"box\" data-location={location}>\n      <div className=\" is-size-6 is-italic has-text-weight-medium\">\n        {location}\n      </div>\n      <div className=\"is-flex \">\n        <div className=\"rev-max-description\">{reviewText}</div>\n      </div>\n      <div>Rating {stars}</div>\n      <div>{username}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport image from \"../../img/hero-img.jpg\"\n\nexport const Hero = () => {\n  return (\n    <section className=\"hero\">\n      <div className=\"\">\n          <img className=\"\" src={image}/>\n      </div>\n    </section>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_GET_ME = gql`\n  query Me {\n    me {\n      username\n      _id\n      savedReviews {\n        reviewText\n        location\n        rating\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($User: String) {\n    _id\n    username\n    email\n    savedReviews {\n      _id\n      reviewText\n      rating\n      username\n    }\n  }\n`;\n\nexport const QUERY_REVIEW = gql`\n  query review($Review: String) {\n    _id\n    reviewText\n    rating\n    username\n  }\n`;\n\nexport const QUERY_REVIEWS = gql`\n  query reviews($username: String) {\n    reviews(username: $username) {\n      _id\n      reviewText\n      rating\n      username\n    }\n  }\n`;\n\nexport const GET_REVIEWS = gql`\n  query reviews {\n    users {\n      username\n      savedReviews {\n        reviewText\n        _id\n        username\n        rating\n        location\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport './style.css'\n// componenets\nimport { Review } from '../../Review';\nimport { Hero } from '../../Hero';\nimport AutoComplete from '../../Autocomplete';\n\nimport { GET_REVIEWS } from '../../../utils/query';\nimport { useQuery } from '@apollo/client';\n\n\nconst Home = () => {\n\n  const [userData, setUserData] = useState({});\n  const { loading, error, data } = useQuery(GET_REVIEWS);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n\n  console.log(userData);\n  return (\n    <div className=\"homepage mb-8\">\n      <Hero></Hero>\n      <div className='container mt-2'>\n        {data.users.map(user => {\n          if (user.savedReviews.length) {\n            return user.savedReviews.map(review => {\n              return (\n                <Review key={review._id} location={review.location} reviewText={review.reviewText} username={review.username} rating={review.rating} />\n              )\n            });\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($email: String!, $username: String!, $password: String!) {\n    addUser(email: $email, username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($username: String!, $email: String!) {\n    updateUser(username: $username, email: $email) {\n      token\n      user {\n        _id\n        username\n        email\n        savedReviews {\n          _id\n          reviewText\n          rating\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const REMOVE_USER = gql`\n  mutation removeUser($email: String!, $password: String!) {\n    removeuser(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_REVIEW = gql`\nmutation addReview($reviewText: String!, $rating: Int!, $location: String!) {\n  addReview(reviewText: $reviewText, rating: $rating, location: $location) {\n    username\n    savedReviews {\n      reviewText\n      location\n      reviewText\n    }\n  }\n}\n`;\n\nexport const DELETE_REVIEW = gql`\n  mutation deleteReview($email: String!, $password: String!) {\n    deleteReview(username: $username, email: $email) {\n      token\n      user {\n        _id\n        username\n        email\n        savedReviews {\n          _id\n          reviewText\n          rating\n          username\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport './style.css';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../../utils/mutations';\nimport Auth from '../../../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n\n\n  const handleLogin = (e) => {\n    const loginEl = document.querySelector('.login-container');\n    const signUpEl = document.querySelector('.sign-up-container');\n    if (!signUpEl.classList.contains('is-hidden')) {\n      signUpEl.classList.toggle('is-hidden');\n    }\n    loginEl.classList.toggle('is-hidden');\n  }\n\n  return (\n    <div className=\"write-position is-hidden mobile-p login-container signup-bg\">\n      <div className=\"field\">\n        <div className='is-flex is-justify-content-space-between'>\n          <h1 className=\"title\">Login</h1>\n          <button className='delete' onClick={handleLogin}></button>\n        </div>\n        <form onSubmit={handleFormSubmit}>\n          <div className='mb-1'>\n            <input\n              className=\"input\"\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div className='mb-1'>\n            <input\n              className=\"input\"\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n          </div>\n          <button className=\"button is-success has-text-black\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n\n        {error && <div>Login failed</div>}\n      </div>\n    </div>\n\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport {ADD_USER} from '../../../utils/mutations';\nimport './style.css';\nimport Auth from '../../../utils/auth';\n\nexport default function Signup() {\n  \n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  \n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  }\n\n      // submit form\n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n  \n        try {\n          const { data } = await addUser({\n            variables: { ...formState }\n          });\n  \n          Auth.login(data.addUser.token);\n        }\n        catch (error) {\n          console.error(error);\n        }\n      }\n\n      const handleSignUp = (e) => {\n        const signUpEl = document.querySelector('.sign-up-container');\n        const loginEl = document.querySelector('.login-container');\n        if (!loginEl.classList.contains('is-hidden')) {\n          loginEl.classList.toggle('is-hidden');\n        }\n        signUpEl.classList.toggle('is-hidden');\n      }\n\n  return (\n    <div className='write-position is-hidden mobile-p sign-up-container signup-bg'>\n      <div className='is-flex is-justify-content-space-between'>\n          <h1 className=\"title\">Signup</h1>\n          <button className='delete' onClick={handleSignUp}></button>\n        </div>\n      <form className=\"signup\" onSubmit={handleFormSubmit}>\n        <div className=\"\">\n            <label className=\"label\"></label>\n            <div className=\"mb-1\">\n              <input \n                className=\"input\" \n                type=\"username\"\n                name=\"username\"\n                id=\"username\" \n                placeholder=\"Username\"\n                value={formState.username}\n                onChange={handleChange} />\n            </div>\n          </div>\n          \n          <div className=\"field\">\n            <label className=\"label\"></label>\n            <div className=\"mb-1\">\n              <input \n                className=\"input\" \n                type=\"email\"\n                name=\"email\"\n                id=\"email\" \n                placeholder=\"Email\"\n                value={formState.email}\n                onChange={handleChange} /> \n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\"></label>\n            <div className=\"mb-1\">\n              <input \n                className=\"input\" \n                type=\"password\" \n                name=\"password\"\n                id=\"password\" \n                placeholder=\"********\"\n                value={formState.password}\n                onChange={handleChange} />\n            </div>\n          </div>\n          <button class=\"button is-success has-text-black\" type=\"submit\">Signup!</button>\n      </form>\n      {error && <div>Signup failed</div>}\n    </div>\n  );\n}","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport {QUERY_GET_ME} from '../../../utils/query';\nimport { Review } from '../../Review';\n\nexport const Profile = () => {\n\n  const { loading, error, data} = useQuery(QUERY_GET_ME)\n\n  if (loading) return 'Loading...'\n  if (error) return `Error... ${error}`;\n\n  console.log(data);\n\n  return (\n    <div className='container mt-5r mb-4'>\n      <div className='title has-text-centered-mobile'>Your Reviews</div>\n      {data.me.savedReviews.map(review => {\n        if (review) {\n          return (\n            <Review key={review._id} location={review.location} reviewText={review.reviewText} username={review.username} rating={review.rating}/>\n          )\n        }\n      })}\n    </div>\n  )\n}\n  \n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport AutoComplete from \"../Autocomplete\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_REVIEW } from \"../../utils/mutations\";\nimport { QUERY_REVIEWS, QUERY_GET_ME } from \"../../utils/query\";\n\n// review form\nexport default function Write() {\n  const [addReview, { data, loading, error }] = useMutation(ADD_REVIEW);\n  const [reviewText, setReviewText] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  const [location, setLocation] = useState(\"\");\n\n  if (loading) return \"Review Submitted\";\n  if (error) return `Submission error! ${error.message}`;\n\n  const handleLocationChange = (e) => {\n    console.log(e.target.value);\n    setLocation(e.target.value);\n  };\n\n  const handleReviewChange = (e) => {\n    console.log(e.target.value);\n    setReviewText(e.target.value);\n  };\n\n  const handleRatingChange = (e) => {\n    console.log(e.target.value);\n    setRating(parseInt(e.target.value));\n  };\n\n  const handleAddReview = (e) => {\n    const addReviewEl = document.querySelector('.write-container');\n    addReviewEl.classList.toggle('is-hidden');\n  }\n\n  return (\n    <div className=\"write-position is-hidden write-bg write-container mobile-p\">\n      <div className='is-flex is-justify-content-space-between'>\n        <h1 className=\"title mobile-title\">Add Review</h1>\n        <button className='delete' onClick={handleAddReview}></button>\n      </div>\n\n      <form\n        className=\"is-flex is-flex-direction-column\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          addReview({ variables: { reviewText, rating, location } });\n        }}\n      >\n        <div className='mb-1'>\n          <AutoComplete change={handleLocationChange} />\n        </div>\n\n        <textarea\n          className=\" textarea mb-1\"\n          onChange={handleReviewChange}\n          placeholder=\"Add review text here...\"\n        ></textarea>\n        <input\n          onChange={handleRatingChange}\n          className=\"input mb-1\"\n          list=\"stars\"\n          name=\"stars\"\n          placeholder=\"How many stars?\"\n        />\n        <datalist id=\"stars\">\n          <option value=\"1\" />\n          <option value=\"2\" />\n          <option value=\"3\" />\n          <option value=\"4\" />\n          <option value=\"5\" />\n        </datalist>\n        <button type=\"submit\" className=\"button\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n","// react\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// component root\nimport NavTabs from '../NavTabs/index';\nimport Footer from '../Footer/index';\n\n// pages\nimport Home from '../pages/Home';\nimport Login from '../pages/Login/index';\nimport Signup from '../pages/Signup/index';\nimport {Profile} from '../pages/Profile';\n\n// style sheet\nimport './style.css';\nimport Write from '../Write';\n\nfunction ReviewContainer() {\n  return (\n      <Router>\n        <div>\n          <NavTabs></NavTabs>\n          <main className=' min-height-100'>\n            <Write></Write>\n            <Route exact path=\"/\" component={Home} />\n            <Login></Login>\n            <Signup></Signup>\n            <Route exact path=\"/profile\" component={Profile} />\n            {/* <Route render={() => <h1>Wrong page!</h1>} /> */}\n          </main>\n          <Footer></Footer>\n        </div>\n      </Router>\n  );\n}\n\nexport default ReviewContainer;\n","import React from 'react';\nimport ReviewContainer from './components/ReviewContainer/index';\n// packages\nimport { \n  ApolloClient,\n  InMemoryCache, \n  ApolloProvider, \n  createHttpLink, \n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <ReviewContainer></ReviewContainer>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/hero-img.e7f4ae0b.jpg\";"],"sourceRoot":""}